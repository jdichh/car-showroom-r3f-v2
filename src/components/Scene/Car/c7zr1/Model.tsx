/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei'
import { useEffect } from 'react'
import * as THREE from 'three'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Chevrolet_CorvetteZR1_2018_Wheel_1Combined3DWheel_3DWheel_front: THREE.Mesh
    Chevrolet_CorvetteZR1RewardRecycled_2018CombinedCalliperBodyExo: THREE.Mesh
    Chevrolet_CorvetteZR1_2018Badge_Geo_lodA: THREE.Mesh
    Chevrolet_CorvetteZR1_2018Base_Geo_lodA: THREE.Mesh
    Chevrolet_CorvetteZR1_2018Coloured_Geo_lodA: THREE.Mesh
    Chevrolet_CorvetteZR1_2018Engine_Geo_lodA: THREE.Mesh
    Chevrolet_CorvetteZR1_2018Grille2_Geo_lodA: THREE.Mesh
    Chevrolet_CorvetteZR1_2018Grille3_Geo_lodA: THREE.Mesh
    Chevrolet_CorvetteZR1_2018Interior_Geo_lodA: THREE.Mesh
    Chevrolet_CorvetteZR1_2018InteriorTilling_Geo_lodA: THREE.Mesh
    Chevrolet_CorvetteZR1_2018ManufacturerPlate_Geo_lodA: THREE.Mesh
    Chevrolet_CorvetteZR1_2018SeatBelt_Geo_lodA: THREE.Mesh
    Chevrolet_CorvetteZR1_2018Window_Geo_lodA: THREE.Mesh
    Chevrolet_CorvetteZR1_2018Kit1_Carbon1_Geo_lodA: THREE.Mesh
    Chevrolet_CorvetteZR1_2018Kit1_Paint_Geo_lodA: THREE.Mesh
    Chevrolet_CorvetteZR1_2018Light_Geo_lodA: THREE.Mesh
    Chevrolet_CorvetteZR1_2018_Wheel_1Combined3DWheel_3DWheel_f: THREE.Mesh
    Chevrolet_CorvetteZR1RewardRecycled_2018CombinedCalliperBod: THREE.Mesh
    Chevrolet_CorvetteZR1_2018_Wheel_1Combined3DWheel_3DWheel_f001: THREE.Mesh
    Chevrolet_CorvetteZR1RewardRecycled_2018CombinedCalliperBod001: THREE.Mesh
    Chevrolet_CorvetteZR1_2018_Wheel_1Combined3DWheel_3DWheel_f002: THREE.Mesh
    Chevrolet_CorvetteZR1RewardRecycled_2018CombinedCalliperBod002: THREE.Mesh
  }
  materials: {
    Wheels: THREE.MeshPhysicalMaterial
    Caliper: THREE.MeshPhysicalMaterial
    Badge: THREE.MeshPhysicalMaterial
    Base: THREE.MeshPhysicalMaterial
    Paint2: THREE.MeshPhysicalMaterial
    Engine: THREE.MeshStandardMaterial
    Grille2: THREE.MeshStandardMaterial
    Grille3: THREE.MeshStandardMaterial
    Interior: THREE.MeshStandardMaterial
    Interior2: THREE.MeshStandardMaterial
    Plate: THREE.MeshPhysicalMaterial
    Seatbelt: THREE.MeshStandardMaterial
    Glass: THREE.MeshPhysicalMaterial
    CarbonFiber: THREE.MeshPhysicalMaterial
    Paint: THREE.MeshPhysicalMaterial
    Lights: THREE.MeshStandardMaterial
  }
}

export function C7ZR1(props: any) {
  const { nodes, materials } = useGLTF('models/c7zr1.glb') as GLTFResult

  useEffect(() => {
    // car paint
    Object.entries(materials).map((material) => {
      if (material[0] == "Paint") {
        material[1].color = new THREE.Color(props.color.hexCode);
      }
      material[1].needsUpdate = true;
    });
  }, [materials, props]);


  return (
    <group {...props} dispose={null} scale={4} position={[0, -1.47, 0]}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chevrolet_CorvetteZR1_2018_Wheel_1Combined3DWheel_3DWheel_front.geometry}
        material={materials.Wheels}
        position={[-0.801, 0.169, 1.353]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={[-0.85, -1, -1]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Chevrolet_CorvetteZR1RewardRecycled_2018CombinedCalliperBodyExo.geometry}
          material={materials.Caliper}
          position={[0.009, -0.155, 0]}
        />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chevrolet_CorvetteZR1_2018Badge_Geo_lodA.geometry}
        material={materials.Badge}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chevrolet_CorvetteZR1_2018Base_Geo_lodA.geometry}
        material={materials.Base}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chevrolet_CorvetteZR1_2018Coloured_Geo_lodA.geometry}
        material={materials.Paint2}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chevrolet_CorvetteZR1_2018Engine_Geo_lodA.geometry}
        material={materials.Engine}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chevrolet_CorvetteZR1_2018Grille2_Geo_lodA.geometry}
        material={materials.Grille2}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chevrolet_CorvetteZR1_2018Grille3_Geo_lodA.geometry}
        material={materials.Grille3}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chevrolet_CorvetteZR1_2018Interior_Geo_lodA.geometry}
        material={materials.Interior}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chevrolet_CorvetteZR1_2018InteriorTilling_Geo_lodA.geometry}
        material={materials.Interior2}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chevrolet_CorvetteZR1_2018ManufacturerPlate_Geo_lodA.geometry}
        material={materials.Plate}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chevrolet_CorvetteZR1_2018SeatBelt_Geo_lodA.geometry}
        material={materials.Seatbelt}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chevrolet_CorvetteZR1_2018Window_Geo_lodA.geometry}
        material={materials.Glass}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chevrolet_CorvetteZR1_2018Kit1_Carbon1_Geo_lodA.geometry}
        material={materials.CarbonFiber}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chevrolet_CorvetteZR1_2018Kit1_Paint_Geo_lodA.geometry}
        material={materials.Paint}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chevrolet_CorvetteZR1_2018Light_Geo_lodA.geometry}
        material={materials.Lights}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chevrolet_CorvetteZR1_2018_Wheel_1Combined3DWheel_3DWheel_f.geometry}
        material={materials.Wheels}
        position={[-0.791, 0.169, -1.361]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={-1}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Chevrolet_CorvetteZR1RewardRecycled_2018CombinedCalliperBod.geometry}
          material={materials.Caliper}
          position={[0.006, 0.147, 0]}
          rotation={[-Math.PI, 0, 0]}
        />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chevrolet_CorvetteZR1_2018_Wheel_1Combined3DWheel_3DWheel_f001.geometry}
        material={materials.Wheels}
        position={[0.791, 0.169, -1.361]}
        rotation={[Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Chevrolet_CorvetteZR1RewardRecycled_2018CombinedCalliperBod001.geometry}
          material={materials.Caliper}
          position={[0.006, 0.147, 0]}
          rotation={[-Math.PI, 0, 0]}
        />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Chevrolet_CorvetteZR1_2018_Wheel_1Combined3DWheel_3DWheel_f002.geometry}
        material={materials.Wheels}
        position={[0.801, 0.169, 1.353]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[0.85, 1, 1]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Chevrolet_CorvetteZR1RewardRecycled_2018CombinedCalliperBod002.geometry}
          material={materials.Caliper}
          position={[0.009, -0.155, 0]}
        />
      </mesh>
    </group>
  )
}

useGLTF.preload('models/c7zr1.glb')